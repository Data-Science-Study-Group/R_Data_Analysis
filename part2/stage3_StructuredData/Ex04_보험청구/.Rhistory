summarise(average=mean(cty,na.rm=T)) %>%
arrange(average)
?arrange
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(average,desc(average))
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average)) %>%
head(5)
mpg
mpg[,class=="suv"]
mpg[class=="suv"]
mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average)) %>%
head(5)
(select_mpg <- filter(mpg, class %in% c('subaru','toyota','nissan','jeep','mercury)))
)
))))))))))
''
'
(select_mpg <- filter(mpg, class %in% c('subaru','toyota','nissan','jeep','mercury')))
(select_mpg <- filter(mpg, class %in% c('subaru','toyota','nissan','jeep','mercury')))
select_mpg
(select_mpg <- filter(mpg, manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')))
select_mpg
select_mpg
select_mpg <- mpg %>%
filter(mpg, manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg <- mpg %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
ggplot(select_mpg,aes(x=manufacturer,y=average,fill=manufacturer)) +
geom_bar(stat="identity")
select_mpg <- arrange(select_mpg,desc(average))
select_mpg
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
ggplot(select_mpg,aes(x=manufacturer,y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg <- within(theTable,
manufacturer <- factor(manufacturer,
levels=names(sort(table(manufacturer),
decreasing=TRUE))))
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg <- within(select_mpg,
manufacturer <- factor(manufacturer,
levels=names(sort(table(manufacturer),
decreasing=TRUE))))
ggplot(select_mpg,aes(x=manufacturer,y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
ggplot(select_mpg,aes(x=reorder(manufacturer,-average),y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
ggplot(select_mpg,aes(x=reorder(manufacturer,-average),y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
mpg
mpg %>%
filter(class=="suv") %>%
group_by(class) %>%
summarise_each(funs(mean,n()))
mpg %>%
filter(class=="suv") %>%
group_by(class) %>%
summarise(number=length(cty,na.rm=T))
mpg %>%
group_by(class) %>%
summarise(number=length(class))
ggplot(number_mpg,aes(x=reorder(class,-number),y=number)) +
geom_bar(stat="identity") +
xlab("class") + ylab("frequency") +
ggtitle("Barplot (Frequency of class)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
number_mpg <- mpg %>%
group_by(class) %>%
summarise(number=length(class))
ggplot(number_mpg,aes(x=reorder(class,-number),y=number)) +
geom_bar(stat="identity") +
xlab("class") + ylab("frequency") +
ggtitle("Barplot (Frequency of class)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
economics
str(economics)
ggplot(economics,aes(x=date,y=psavert)) +
geom_line() +
ggtitle("Time series plot of psavert") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=12,face="bold"),
axis.title.y = element_text(color="blue",size=12,face="bold"))
find_mpg <- mpg %>%
filter(class %in% c("compact","subcompact","suv")) %>%
group_by(class)
find_mpg
ggplot(find_mpg,aes(x=class,y=cty,fill=class)) +
geom_boxplot()
ggplot(find_mpg,aes(x=class,y=cty,fill=class)) +
geom_boxplot() +
ggtitle("Boxplot of cty (by class") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
ggplot(find_mpg,aes(x=class,y=cty,fill=class)) +
geom_boxplot() +
ggtitle("Boxplot of cty (by class)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
diamonds
str(diamonds)
View(diamonds)
number_diamonds <- diamonds %>%
group_by(cut) %>%
summarise(number=length(cut))
number_diamonds
ggplot(number_diamonds,aes(x=reorder(cut,-number),y=number,fill=cut)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("frequency") +
ggtitle("Barplot (Frequency of cut)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
sort_diamonds <- arrange(diamonds,cut)
View(sort_diamonds)
ggplot(sort_diamonds,aes(x=cut,y=price,color=cut,group=color)) + geom_line()
ggplot(sort_diamonds,aes(x=cut,y=price,color=cut,group=color)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("price") +
ggtitle("Barplot of price") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(sort_diamonds,aes(x=cut,y=price,color=cut,group=cut)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("price") +
ggtitle("Barplot of price") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
sort_diamonds <- diamonds %>%
group_by(cut) %>%
summarise(average=mean(price,na.rm=T)) %>%
arrange(desc(average))
sort_diamonds
sort_diamonds <- diamonds %>%
group_by(cut) %>%
summarise(average=mean(price,na.rm=T)) %>%
arrange(desc(average))
sort_diamonds
ggplot(sort_diamonds,aes(x=reorder(cut,-average),y=average,fill=cut)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("mean of price") +
ggtitle("Barplot of price") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
str(diamonds)
reorder_diamonds <- arrange(diamonds,cut,order)
reorder_diamonds <- arrange(diamonds,cut,order)
reorder_diamonds <- arrange(diamonds,cut)
reorder_diamonds <- arrange(reorder_diamonds,order)
reorder_diamonds <- arrange(diamonds,cut,color)
reorder_diamonds
reorder_diamonds <- diamonds %>%
group_by(cut,color) %>%
summarise(average=mean(price,na.rm=T))
reorder_diamonds
View(reorder_diamonds)
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut)) +
geom_line() + geom_point(size=3,shape=2) +
xlab("cut") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut)) +
geom_line() + geom_point(size=3,shape=1) +
xlab("cut") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
reorder_diamonds <- diamonds %>%
group_by(cut,color) %>%
summarise(average=mean(price,na.rm=T))
reorder_diamonds
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=average,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
str(reorder_diamonds)
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=average,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=3,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line(aes(linetype=cut)) + geom_point(aes(size=average),shape=22) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line(aes(linetype=cut)) + geom_point(aes(size=average)) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average)) %>%
head(5)
mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(class=="suv") %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
ggplot(select_mpg,aes(x=reorder(manufacturer,-average),y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Barplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
setwd("D:/Workplace/R_Data_Analysis/part2/stage1_Wordcloud/6월 11일 NLP 분석 과제")
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(stringr)
useSejongDic()
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul02 <- readLines("data/응답소_2015_02.txt")
seoul03 <- readLines("data/응답소_2015_03.txt")
seoul04 <- readLines("data/응답소_2015_04.txt")
seoul05 <- readLines("data/응답소_2015_05.txt")
seoul06 <- readLines("data/응답소_2015_06.txt")
seoul07 <- readLines("data/응답소_2015_07.txt")
seoul08 <- readLines("data/응답소_2015_08.txt")
seoul09 <- readLines("data/응답소_2015_09.txt")
seoul10 <- readLines("data/응답소_2015_10.txt")
seoul11 <- readLines("data/응답소_2015_11.txt")
seoul12 <- readLines("data/응답소_2015_12.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
seoul01 <- unlist(seoul01)
seoul02 <- sapply(seoul02,extractNoun,USE.NAMES=F)
seoul02 <- unlist(seoul02)
seoul03 <- sapply(seoul03,extractNoun,USE.NAMES=F)
seoul03 <- unlist(seoul03)
seoul04 <- sapply(seoul04,extractNoun,USE.NAMES=F)
seoul04 <- unlist(seoul04)
seoul05 <- sapply(seoul05,extractNoun,USE.NAMES=F)
seoul05 <- unlist(seoul05)
seoul06 <- sapply(seoul06,extractNoun,USE.NAMES=F)
seoul06 <- unlist(seoul06)
seoul07 <- sapply(seoul07,extractNoun,USE.NAMES=F)
seoul07 <- unlist(seoul07)
seoul08 <- sapply(seoul08,extractNoun,USE.NAMES=F)
seoul08 <- unlist(seoul08)
seoul09 <- sapply(seoul09,extractNoun,USE.NAMES=F)
seoul09 <- unlist(seoul09)
seoul10 <- sapply(seoul10,extractNoun,USE.NAMES=F)
seoul10 <- unlist(seoul10)
seoul11 <- sapply(seoul11,extractNoun,USE.NAMES=F)
seoul11 <- unlist(seoul11)
seoul12 <- sapply(seoul12,extractNoun,USE.NAMES=F)
seoul12 <- unlist(seoul12)
seoul_2015 <- c(seoul01,seoul02,seoul03,seoul04,seoul05,seoul06,
seoul07,seoul08,seoul09,seoul10,seoul11,seoul12)
length(seoul_2015)
head(seoul_2015,30)
seoul_2015 <- str_replace_all(seoul_2015,"[^[:alpha:]]","") # 한글, 영어 이외는 제거
seoul_2015 <- str_replace_all(seoul_2015,"[A-z]","") # 모든 영문자 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\s","") # 공백 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\d","") # 숫자 제거
seoul_2015 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=3}, seoul_2015)
length(seoul_2015)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul_2015 <- gsub((txt[i]),"",seoul_2015)
}
write(unlist(seoul_2015),"data/seoul_2015_1.txt")
seoul_2015 <- read.table("data/seoul_2015_1.txt")
nrow(seoul_2015)
wordcount <- table(seoul_2015)
head(sort(wordcount,decreasing=T),30)
palete <- brewer.pal(9,"Set3")
par(oma=rep(0.5,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcount
wordcount>=100
wordcount <- wordcount[wordcount>=100]
wordcount
palete <- brewer.pal(9,"Set3")
par(oma=rep(0.5,4))
length(wordcount)
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
legend(0.2,0.8,"2015년 서울시 응답소 요청사항 분석",cex=0.8,fill=NA,border=NA,bg="white",
text.col="blue",text.font=2,box.col="blue")
View(seoul_2015)
?wordcloud
wordcount <- table(seoul_2015)
wordcloud(names(wordcount),freq=wordcount,scale=c(4,0.5),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcount <- wordcount[wordcount > 1] # 빈도수가 1인 명사 제외
wordcloud(names(wordcount),freq=wordcount,scale=c(4,0.5),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(4,0.5),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
legend(0.2,0.9,"2015년 서울시 응답소 요청사항 분석",cex=0.8,fill=NA,border=NA,bg="yellow",
text.col="blue",text.font=2,box.col="red")
setwd("D:/Workplace/R_Data_Analysis/part2/stage3_StructuredData/Ex01_서울시의원현황")
(data1 <- read.csv("2013년_서울_주요구별_병원현황.csv",header=T))
library(ggplot2)
barplot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년","\n",
"출처[국민건강보험공단]"),ylab="병원수",beside=T,
col=rainbow(8),ylim=c(0,350))
abline(h=seq(0,350,10),lty=3,lwd=0.2)
(name <- data1$표시과목)
legend(75,350,name,csx=0.8,fill=rainbow(8),bg="white")
barplot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년","\n",
"출처[국민건강보험공단]"),ylab="병원수",beside=T,
col=rainbow(8),ylim=c(0,350))
abline(h=seq(0,350,10),lty=3,lwd=0.2)
legend(50,350,name,csx=0.8,fill=rainbow(8),bg="white")
legend(25,350,name,csx=0.8,fill=rainbow(8),bg="white")
data1
library(dplyr)
?arrange
str(data1)
data1_1 <- read.csv("2013년_서울_주요구별_병원현황_ggplot2.csv",header=T)
sort_data1_1 <- arrange(data1_1,표시과목,지역구)
sort_data1_1
sort_data1_1 <- arrange(data1_1,지역구,표시과목)
sort_data1_1
sort_med1 <- arrange(data1_1,지역구,표시과목)
sort_med2 <- ddply(sort_med1,"지역구",transform,누적합계=cumsum(병원수))
library(dplyr)
sort_med2 <- ddply(sort_med1,"지역구",transform,누적합계=cumsum(병원수))
library(plyr)
sort_med2 <- ddply(sort_med1,"지역구",transform,누적합계=cumsum(병원수))
sort_med2
sort_med2 <- ddply(sort_med1,"지역구",transform,누적합계=cumsum(병원수),
label=cumsum(병원수)-0.5*병원수)
ggplot(sort_med2,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity") +
geom_text(aes(y=label,label=paste(병원수,"곳")),colour="black",size=5) +
ggtitle("서울시 주요 구별 과목별 병원현황-2013년") +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5),
axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour="orange",size=4))
ggplot(sort_med2,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity") +
geom_text(aes(y=label,label=paste(병원수,"곳")),colour="black",size=) +
ggtitle("서울시 주요 구별 과목별 병원현황-2013년") +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5),
axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour="orange",size=7))
ggplot(sort_med2,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity") +
geom_text(aes(y=label,label=paste(병원수,"곳")),colour="black",size=2) +
ggtitle("서울시 주요 구별 과목별 병원현황-2013년") +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5),
axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour="orange",size=7))
ggplot(sort_med2,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity") +
ggtitle("서울시 주요 구별 과목별 병원현황-2013년") +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5),
axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour="orange",size=7))
ggplot(sort_med2,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity") +
ggtitle("서울시 주요 구별 과목별 병원현황-2013년") +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5),
axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour="black",size=10))
?melt
library(reshape2)
?melt
clinic <- melt(data1,id=c('표시과목'))
View(clinic)
colnames(clinic) <- c("표시과목","지역구","병원수")
View(clinic)
ggplot(clinic,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity",position="dodge") +
geom_hline(yintercept=seq(0,330,10),lty="dashed",size=0.1) +
ggtitle(paste("서울시 주요 구별 과목별 병원현황-2013년","\n",
"출처[국민건강보험공단]")) +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5))
clinic <- melt(data1,id=c('표시과목'))
View(clinic)
clinic <- melt(data1,id=c('표시과목'),variable.name="지역구",
value.name="병원수")
View(clinic)
install.packages('plotly')
library(plotly)
p <- ggplot(clinic,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity",position="dodge") +
geom_hline(yintercept=seq(0,330,10),lty="dashed",size=0.1) +
ggtitle(paste("서울시 주요 구별 과목별 병원현황-2013년","\n",
"출처[국민건강보험공단]")) +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5))
ggplotly(p)
p <- ggplot(clinic,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity",position="dodge") +
geom_hline(yintercept=seq(0,330,10),lty="dashed",size=0.1) +
ggtitle(paste("서울시 주요 구별 과목별 병원현황-2013년","\n",
"출처[국민건강보험공단]")) +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5))
ggplot(clinic,aes(x=지역구,y=병원수,fill=표시과목)) +
geom_bar(stat="identity",position="dodge") +
geom_hline(yintercept=seq(0,330,10),lty="dashed",size=0.1) +
ggtitle(paste("서울시 주요 구별 과목별 병원현황-2013년","\n",
"출처[국민건강보험공단]")) +
theme(plot.title=element_text(color="darkblue",size=16,face="bold",hjust=0.5))
setwd("D:/Workplace/R_Data_Analysis/part2/stage3_StructuredData/Ex04_보험청구")
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringAsFactors=F)
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringAsFactors=F)
?read.csv
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringAsFactors=F)
setwd("D:/Workplace/R_Data_Analysis/part2/stage3_StructuredData/Ex04_보험청구")
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringAsFactors=F)
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringAsFactors=F)
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",header=T)
count
