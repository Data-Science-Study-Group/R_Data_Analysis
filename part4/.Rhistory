library(googleVis)
Fruits
library(dplyr)
f2 <- filter(Fruits, Expenses>80)
f2
Fruits %>%
library(ggplot2)
View(mpg)
library(dplyr)
mpg %>%
select(manufacturer %in% c('audi','toyota'))
?select
mpg %>%
filter(manufacturer %in% c('audi','toyota'))
mpg %>%
filter(manufacturer %in% c('audi','toyota')) %>%
group_by(manufacturer) %>%
summarise(고속도로연비평균=mean(hwy),na.rm=T)
mpg %>%
filter(manufacturer %in% c('chevrolet','ford','honda')) %>%
group_by(manufacturer) %>%
summarise(시내연비평균=mean(cty),na.rm=T)
mpg %>%
mutate(평균속도=(cty+hwy)/2)
mpg %>%
mutate(속도=(cty+hwy)/2) %>%
group_by(drv) %>%
select(drv,속도) %>%
summarise(평균속도=mean(속도))
mpg %>%
mutate(속도=(cty+hwy)/2) %>%
group_by(cyl) %>%
arrange(속도)
head(mpg %>%
mutate(속도=(cty+hwy)/2) %>%
group_by(class) %>%
arrange(desc(속도)),5)
mpg %>%
mutate(속도=(cty+hwy)/2) %>%
group_by(cyl) %>%
summarise(평균속도=mean(속도))
arrange(평균속도)
head(mpg %>%
mutate(속도=(cty+hwy)/2) %>%
group_by(class) %>%
summarise(평균속도=mean(속도))
arrange(desc(평균속도)),5)
mpg %>%
mutate(속도=(cty+hwy)/2) %>%
group_by(cyl) %>%
arrange(속도)
mpg %>%
mutate(속도=(cty+hwy)/2) %>%
filter(cyl,속도)
group_by(cyl) %>%
arrange(속도)
mpg %>%
mutate(속도=(cty+hwy)/2) %>%
select(cyl,속도)
group_by(cyl) %>%
arrange(속도)
mpg %>%
mutate(avg_spd=(cty+hwy)/2) %>%
group_by(class) %>%
summarise(class별평균속도=mean(avg_spd)) %>%
arrange(desc(class별평균속도)) %>%
head(5)
mpg %>%
mutate(avg_spd=(cty+hwy)/2) %>%
select(manufacturer, class, cty, hwy, avg_spd) %>%
head(5)
mtcars
mtcars %>%
mutate(mpg_per_disp=mpg/disp) %>%
arrange(desc(mpg_per_disp)) %>%
head(5)
mtcars %>%
group_by(cyl) %>%
summarise(평균마력=mean(hp))
View(mtcars)
mtcars %>%
mutate(mpg_hp_avg=(mpg+hp)/2) %>%
group_by(cyl) %>%
summarise(average=mean(mpg_hp_avg))
iris
iris %>%
group_by(Species) %>%
summarise_each(funs(mean,n()))
iris %>%
group_by(Species) %>%
summarise_each(list(mean,n()))
iris %>%
group_by(Species) %>%
summarise_each(funs(mean,n()))
iris %>%
group_by(Species) %>%
summarise_each(list(mean))
iris %>%
group_by(Species) %>%
summarise_each(list(mean), Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)
install.packages("sqldf")
library(sqldf)
library(googleVis)
Fruits
sqldf(' select * from Fruits ')
sqldf(" select * from Fruits where Fruit='Apples'")
sqldf('' select * from Fruits where Fruit=\'Apples\' ')
sqldf(' select * from Fruits where Fruit=\'Apples\' ')
sqldf(' select * from Fruits limit 3 ')
sqldf(' select * from Fruits order by Year ')
sqldf(' select * from Fruits limit 3, 5 ')
sqldf(' select * from Fruits order by Year ')
sqldf(' select * from Fruits order by Year desc ')
sqldf(' select sum(Sales) from Fruits ')
sqldf(' select max(Sales) from Fruits ')
sqldf(' select min(Sales) from Fruits ')
sqldf(' select Fruit, sum(Sales) from Fruits
group by Fruit')
sqldf(' select Fruit, sum(Sales), sum(Expenses),
sum(Profit) from Fruits group by Fruit ')
sqldf(' select Year, avg(Sales), avg(Expenses),
avg(Profit) from Fruits group by Year ')
sqldf(' select Fruit, sum(Sales), sum(Expenses), sum(Profit)
from Fruits group by Fruit
order by sum(Profit) desc ')
Fruits
sqldf(' select Fruit, max(Sales), min(Sales) from Fruits ')
sqldf(' select Fruit, max(Sales), min(Sales) from Fruits group by Fruit ')
sqldf(' select * from Fruits where Sales=min(Sales) ')
sqldf(' select * from Fruits where Sales > (select min(Sales) from Fruits) ')
sqldf(' select * from Fruits where Sales = (select min(Sales) from Fruits) ')
sqldf(' select * from Fruits where Expenses = ( select max(Expenses) from Fruits ) ')
sqldf(' select * from Fruits where Sales in ( select min(Sales), max(Sales) from Fruits ) ')
sqldf(' select * from Fruits where Sales = ( select min(Sales) from Fruits ) ')
song <- read.csv("song.csv")
song <- read.csv("D:\Workplace\R_Data_Analysis\part3\data\song.csv")
song <- read.csv("D:/Workplace/R_Data_Analysis/part3/data/song.csv",
header=F, fileEncoding = 'utf-8')
)
song <- read.csv("D:/Workplace/R_Data_Analysis/part3/data/song.csv",
header = F, fileEncoding = 'utf-8')
)
song <- read.csv("D:/Workplace/R_Data_Analysis/part3/data/song.csv",
header = F, fileEncoding = 'utf8')
)
song <- read.csv("song.csv", header = F, fileEncoding = 'utf8')
song <- read.csv("song.csv", header = F, fileEncoding = 'utf8')
seq(1,100,2)
x <- 0
for (i in seq(3,100,3)) {
x <- x + i
}
print(sum)
print(x)
for (i in seq(1,0,1)) {
print(i)
}
for (i in c(1,3,5,7,9)) {
print(i)
}
# 그래프 기초
setwd("D:/Workplace/R_Data_Analysis/part4")
var1 <- 1:5
plot(var1)
var1 <- 5:1
plot(var1)
var2 <- rep(2,3)
plot(var2)
x <- 1:3
y <- 4:2
plot(x,y)
x <- 1:3
y <- 3:1
plot(x,y,xlim=c(0,10),ylim=c(0,5))
x <- 1:3
y <- 3:1
plot(x,y,xlim=c(0,10),ylim=c(0,5),
xlab="x value",ylab="y value",main="Plot test")
v1 <- c(100,130,120,160,150)
plot(v1,type='o',col='red',ylim=c(0,200),axes=F,ann=F)
axis(1,at=1:5,lab=c('Mon','Tue','Wed','Thu','Fri'))
axis(2,ylim=c(0,200))
title(main='FRUIT',col.main='green',font.main=4)
title(xlab='Day',col.lab='black')
title(ylab='Price',col.lab='blue')
v1
par(mfrow=c(1,3))
plot(v1,type='o')
plot(v1,type='s')
plot(v1,type='l')
v1
par(mfrow=c(1,3))
pie(v1)
plot(v1,type='o')
barplot(v1)
par(mfrow=c(1,1))
a <- 1:3
plot(a,xlab='aaa')
par(mgp=c(0,1,0))
plot(a,xlab='aaa')
par(mgp=c(3,1,0))
plot(a,xlab='aaa')
par(mgp=c(3,2,0))
plot(a,xlab='aaa')
par(mgp=c(3,2,1))
plot(a,xlab='aaa')
par(oma=c(2,1,0,0))
plot(a,xlab='aaa')
par(oma=c(0,2,0,0))
plot(a,xlab='aaa')
v1 <- 1:5 ; v2 <- 5:1 ; v3 <- 3:7
plot(v1,type='s',col='red',ylim=c(1,5))
par(new=T)
plot(v2,type='o',col='blue',ylim=c(1,5))
par(new=T)
plot(v3,type='l',col='green')
par(new=F)
plot(v1,type='s',col='red',ylim=c(1,10))
lines(v2,type='o',col='blue',ylim=c(1,5))
lines(v3,type='l',col='green',ylim=c(1,15))
legend(4,9,c('v1','v2','v3'),cex=0.9,col=c('red','blue','green'),lty=1)
x <- 1:5
barplot(x)
barplot(x,horiz=T)
x <- matrix(c(5,4,3,2),2,2)
x
barplot(x,names=c(5,3),col=c('green','yellow'),ylim=c(0,12))
barplot(x,beside=T,names=c(5,3),col=c('green','yellow'))
par(oma=c(1,0,5,1,0,5))
par(oma=c(1,0,5))
barplot(x,names=c(5,3),beside=T,col=c('green','yellow'),horiz=T)
par(oma=c(1,0,5,0))
barplot(x,names=c(5,3),beside=T,col=c('green','yellow'),horiz=T)
par(oma=c(1,0,2,0))
barplot(x,names=c(5,3),beside=T,col=c('green','yellow'),horiz=T)
barplot(x,names=c(5,3),col=c('green','yellow'),xlim=c(0,12),horiz=T)
v1 <- seq(100,180,20) ; v2 <- c(120,130,150,140,170) ; v3 <- c(140,170,120,110,160)
qty <- data.frame(banana=v1,cherry=v2,orange=v3)
qty
barplot(as.matrix(qty),main="Fruit's Sales QTY",
beside=T,col=rainbow(nrow(qty)),ylim=c(0,400))
legend(14,400,c('Mon','Tue','Wed','Thu','Fri'),cex=0.8,fill=rainbow(nrow(qty)))
barplot(t(qty),main="Fruit's Sales QTY",ylim=c(0,900),
col=rainbow(length(qty)),space=0.1,cex.axis=0.8,las=1,
names.arg=c('Mon','Tue','Wed','Thu','Fri'),cex=0.8)
legend(0.2,800,names(qty),cex=0.7,fill=rainbow(length(qty)))
peach <- c(180,200,250,198,170)
color <- c()
for (i in 1:length(peach)) {
if (peach[i] >= 200) {
color <- c(color,'red') }
else if (peach[i] >= 180) {
color <- c(color,'yellow') }
else {
color <- c(color,'green') }
}
barplot(peach,main="peach Sales QTY",
names.arg=c('Mon','Tue','Wed','Thu','Fri'),col=color)
height <- c(182,175,167,172,163,178,181,166,159,155)
hist(height,main="histogram og height")
par(mfrow=c(1,2),oma=c(2,2,0.1,0.1))
y <- c(1,1,2,3,3,3)
hist(y)
plot(y,main='plot')
par(mfrow=c(1,1),oma=c(0.5,0.5,0.1,0.1))
p1 <- seq(10,40,10)
pie(p1,radius=1)
pie(p1,redius=1,init.angle=90)
pie(p1,redius=1,init.angle=90,col=rainbow(length(p1)),
label=c('week1','week2','week3','week4'))
pct <- round(p1/sum(p1)*100,1)
lab <- paste(pct,"%")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p)),
label=lab)
pie(pct,radius=1,init.angle=90,col=rainbow(length(p)),
label=lab)
pie(pct,radius=1,init.angle=90,col=rainbow(length(pct)),
label=lab)
legend(1,1.1,c('week1','week2','week3','week4'),
cex=0.5,fill=rainbow(length(pct)))
lab1 <- c('week1','week2','week3','week4')
lab2 <- paste(lab1,'\n',pct,' %')
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
install.packages("plotrix")
library(plotrix)
f_day <- round(p1/sum(p1)*100,1)
f_label <- paste(f_day,"%")
pie3D(p1,main="3D Pie Chart",col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
legend(0.5,1,c('Mon','Tue','Wed','Thu','Fri'),cex=0.6,
fill=rainbow(length(p1)))
v1 <- c(10,12,15,11,20)
v2 <- c(5,7,15,8,9)
v3 <- c(11,20,15,18,13)
boxplot(v1,v2,v3)
boxplot(v1,v2,v3,col=c('blue','yellow','pink'),
names=c('blue','yellow','pink'),
horizontal=T)
# 관계도
install.packages('igraph')
library(igraph)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
name <- c('서진수 대표이사','일지매 부장','김유신 과장','손흥민 대리','노정호 대리',
'이순신 부장','유관순 과장','신사임당 대리','강감찬 부장','광개토 과장','정몽주 대리')
pemp <- c('서진수 대표이사','서진수 대표이사','일지매 부장','김유신 과장','김유신 과장',
'서진수 대표이사','이순신 부장','유관순 과장','서진수 대표이사','강감찬 부장','광개토 과장')
emp <- data.frame(이름=name,상사이름=pemp)
emp
g <- graph.data.frame(emp,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
str(g)
savePlot("graph/network_2.png", type="png")
png("graph/network_2.png", width=600, height=600)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
dev.off()
dev.off()
g1 <- graph.data.frame(emp,directed=F)
plot(g1,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5,
vertex.label=NA)
install.packages('devtools')
library(devtools)
install.packages('d3Network')
library(d3Network)
install.packages('RCurl')
library('RCurl')
name <- c('Angela Bassett','Jessica Lange','Winona Ryder','Michelle Pfeiffer',
'Whoopi Goldberg','Emma Thompson','Julia Roberts','Sharon Stone','Meryl Streep',
'Susan Sarandon','Nicole Kidman')
pemp <- c('Angela Bassett','Angela Bassett','Jessica Lange','Winona Ryder','Winona Ryder',
'Angela Bassett','Emma Thompson','Julia Roberts','Angela Bassett',
'Meryl Streep','Susan Sarandon')
emp <- data.frame(이름=name,상사이름=pemp)
emp
d3SimpleNetwork(emp,width=600,height=600,file='graph/d3.html')
g <- read.csv("data/군집분석.csv", head=T)
graph1 <- data.frame(학생=g$학생, 교수=g$교수)
g <- graph.data.frame(graph1,directed=T)
plot(g,layout=layout.fruchterman.reingoldvertex.size=2,edge.arrow.size=0.5,
vertex.color='green',vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,
vertex.color='green',vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=2,edge.arrow.size=0.5,
vertex.color='green',vertex.label=NA)
g
V(g)$name
gubun1 <- V(g)$name
gubun1
gubun <- str_sub(gubun1,start=1,end=1)
library(stringr)
gubun <- str_sub(gubun1,start=1,end=1)
gubun1
gubun
color <- c()
for (i in 1:length(gubun)) {
if (gubun[i]=='S') {
color <- c(color,'red') }
else {
color <- c(color,'green') }
}
size <- c()
for (i in 1:length(gubun)) {
if (gubun[i]=='S') {
size <- c(size,2) }
else {
size <- c(size,6) }
}
plot(g,layout=layout.fruchterman.reingold.grid,vertex.size=size,
edge.arrow.size=0.5,vertex.color=color)
plot(g,layout=layout.fruchterman.reingold,vertex.size=size,
edge.arrow.size=0.5,vertex.color=color)
plot(g,layout=layout.fruchterman.reingold,vertex.size=size,
edge.arrow.size=0.5,vertex.color=color,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=size,arrow.size=0,
edge.arrow.size=0.5,vertex.color=color,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=size,edge.arrow.size=0,
edge.arrow.size=0.5,vertex.color=color,vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=size,edge.arrow.size=0,
edge.arrow.size=0.5,vertex.color=color,vertex.label=NA)
shape <- c()
for (i in 1:length(gubun)) {
if (gubun[i]=='S') {
shape <- c(shape,'circle') }
else {
shape <- c(shape,'square') }
}
plot(g,layout=layout.kamada.kawai,vertex.size=size,edge.arrow.size=0,
edge.arrow.size=0.5,vertex.color=color,vertex.label=NA,vertex.shape=shape)
virus1 <- read.csv("data/메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="graph/mers.html")
d3SimpleNetwork(virus1,width=1000,height=1000,file="graph/mers.html")
d3SimpleNetwork(virus1,width=2000,height=1000,file="graph/mers.html")
install.packages("treemap")
library(treemap)
setwd("D:/Workplace/R_Data_Analysis/part4")
total <- read.csv("학생시험결과_전체점수.csv",header=T,sep=",")
total
total <- read.csv("data/학생시험결과_전체점수.csv",header=T,sep=",")
total
treemap(total,vSize="wjatn",index=c('점수','이름'))
treemap(total,vSize="점수",index=c('점수','이름'))
treemap(total,vSize="점수",index=c('조','이름'))
treemap(total,vSize="점수",index=c('점수','조','이름'))
total <- read.table("data/학년별전체성적_new.txt",header=T,sep=",")
total <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total) <- total$이름
total
row.names(total) <- total$이름
total <- total[,2:7]
total
stars(total,flip.labels=F,draw.segment=F,frame.plot=T,full=T,
main="학생별 과목별 성적분석-STAR Chart")
lab <- names(total)
value <- table(lab)
value
stars(total,flip.labels=F,draw.segment=T,frame.plot=T,full=T,
main="학생별 과목별 성적분석-Nightingale chart")
color <- c('black','red','green','blue','cyan','violet')
pie(value,labels=lab,radius=0.1,cex=0.6,col=NA)
pie(value,labels=lab,radius=0.1,cex=0.6,col=color)
stars(total,flip.labels=F,draw.segment=T,frame.plot=T,full=F,
main="학생별 과목별 성적분석-반원 차트")
install.packages('fmsb')
library(fmsb)
layout <- data.frame(분석력=c(5,1),창의력=c(15,3),판단력=c(3,0),
리더쉽=c(5,1),사교성=c(5,1))
set.seed(123)
data1 <- data.frame(분석력=runif(3,1,5),창의력=rnorm(3,10,2),판단력=c(0.5,NA,3),
리더쉽=runif(3,1,5),사교성=c(5,2.5,4))
data2 <- rbind(layout,data1)
data2
layout
data1
op <- par(mar=c(1,0.5,3,1),mfrow=c(2,2))
radarchart(data2,axistype=1,seg=5,plty=1,title="첫번째 타입")
radarchart(data2,axistype=2,pcol=topo.colors(3),seg=5,plty=1,title="두번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol='grey',na.itp=F,title="세번째 타입")
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
par(mar=c(0,0,0,0),mfrow=c(1,1))
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEST","SUB")
par(mar=c(1,1,1,1))
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEST","SUB")
par(mar=c(2,2,2,2))
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEST","SUB")
par(mar=rep(3,4))
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEST","SUB")
var1 <- 1:5
plot(var1)
segments(2,2,3,3)
arrows(5,5,3,3)
text(4,5,"TEXT")
text(3,2,"테스트",srt=45)
iris
iris
View(iris)
setosa <- iris[,Species=="setosa"]
attach(iris)
setosa <- iris[,Species=="setosa"]
setosa <- iris[Species=="setosa"]
setosa <- iris,[Species=="setosa"]
setosa <- iris[Species=="setosa"]
setosa <- iris[,iris$Species=="setosa"]
split(iris, Species)
setosa <- iris.split$setosa
iris.split <- split(iris, Species)
setosa <- iris.split$setosa
versicolor <- iris.split$versicolor
virginica <- iris.split$virginica
plot(setosa$Sepal.Length,setosa$Sepal.Width,col="red",main="setosa of sepal")
plot(setosa$Sepal.Length,setosa$Sepal.Width,type="p",
col="red",xlab="Sepal",ylab="Length"main="setosa of sepal")
plot(setosa$Sepal.Length,setosa$Sepal.Width,type="p",
col="red",xlab="Length",ylab="Width",main="setosa of sepal")
plot(setosa$Sepal.Length,setosa$Sepal.Width,type="p",
col="red",xlab="Length",ylab="Width",main="Sepal of setosa")
plot(setosa$Petal.Length,setosa$Petal.Width,type="p",
col="blue",xlab="Length",ylab="Width",main="Petal of setosa")
par(oma=c(2,2,2,2))
plot(setosa$Sepal.Length,setosa$Sepal.Width,type="p",
col="red",xlab="Length",ylab="Width",main="Sepal of setosa")
plot(setosa$Petal.Length,setosa$Petal.Width,type="p",
col="blue",xlab="Length",ylab="Width",main="Petal of setosa")
plot(versicolor$Sepal.Length,versicolor$Sepal.Width,type="p",
col="red",xlab="Length",ylab="Width",main="Sepal of versicolor")
plot(versicolor$Petal.Length,versicolor$Petal.Width,type="p",
col="blue",xlab="Length",ylab="Width",main="Petal of versicolor")
plot(virginica$Sepal.Length,virginica$Sepal.Width,type="p",
col="red",xlab="Length",ylab="Width",main="Sepal of virginica")
plot(virginica$Petal.Length,virginica$Petal.Width,type="p",
col="blue",xlab="Length",ylab="Width",main="Petal of virginica")
