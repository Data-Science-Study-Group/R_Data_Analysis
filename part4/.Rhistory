gg <- ggplot(korean,aes(x=이름,y=점수)) + geom_bar(stat="identity",fill="green",color="red")
gg + theme(axis.title.x=element_text(angle=45,hjust=1,vjust=1,color="blue",size=8))
score_kem <- read.csv("data/학생별과목별성적_국영수_new.csv",header=T)
score_kem
library(plyr)
sort_kem <- arrange(score_kem,이름,과목)
sort_kem
sort_kem2 <- ddply(sort_kem,"이름",transform,누적합계=cumsum(점수))
sort_kem2
sort_kem3 <- ddply(sort_kem2,"이름",transform,누적합계=cumsum(점수),
label=cumsum(점수)-0.5*점수)
sort_kem3
ggplot(sort_kem3,aes(x=이름,y=점수,fill=과목)) +
geom_bar(stat="identity") +
geom_text(aes(y=label,label=paste(점수,'점')),color="black",size=4)
gg2 <- ggplot(sort_kem3,aes(x=이름,y=점수,fill=과목)) +
geom_bar(stat="identity") +
geom_text(aes(y=label,label=paste(점수,'점')),color="black",size=4) +
guides(fill=guide_legend(reverse=T))
gg2 + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1,color="black",size=8))
score <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
score
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_point(size=6) +
theme_bw() +
theme(panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(color="red",linetype="dashed"))
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_segment(aes(yend=이름),xend=0,color="blue") +
geom_point(size=6,color="green") +
theme_bw() +
theme(panel.grid.major.y=element_blank())
install.packages("gridExtra")
library(gridExtra)
(v_mt <- mtcars)
View(v_mt)
graph1 <- ggplot(v_mt,aes(x=hp,y=mpg))
graph1 + geom_point()
graph2 <- graph1 + geom_point(color="blue")
graph2
graph3 <- graph2 + geom_point(aes(color=factor(am)))
graph3
graph4 <- graph1 + geom_point(size=7)
graph4
graph5 <- graph1 + geom_point(aes(size=wt))
graph5
grapg6 <- graph1 + geom_point(aes(shape=factor(am),size=wt))
graph6 <- graph1 + geom_point(aes(shape=factor(am),size=wt))
graph6
graph7 <- graph1 + geom_point(aes(shape=factor(am),color=factor(am),size=wt)) +
scale_color_manual(values=c("red","green"))
graph7
graph8 <- graph1 + geom_point(color="red") + geom_line()
graph8
graph9 <- graph1 + geom_point(color="blue") +
labs(x="마력",y="연비(mile/gallon)")
graph9
(three <- read.csv("data/학생별과목별성적_3기_3명.csv",header=T))
(sort_score <- arrange(three,이름,과목))
library(dplyr)
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line()
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름)) +
geom_line() + geom_point()
# (sort_kem2 <- ddply(sort_kem,"이름",transform,누적합계=cumsum(점수)))
sort_kem2 <- sort_kem %>%
group_by(이름) %>%
mutate(누적합계=cumsum(점수))
# (sort_kem3 <- ddply(sort_kem2,"이름",transform,누적합계=cumsum(점수),
#                   label=cumsum(점수)-0.5*점수))
sort_kem3 <- sort_kem2 %>%
group_by(이름) %>%
mutate(누적합계=cumsum(점수),label=cumsum(점수)-0.5*점수)
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름,fill=이름)) +
geom_line() + geom_point(size=6,shape=22)
(dis <- read.csv("data/1군전염병발병현황_년도별.csv",stringAsFactors=F))
(dis <- read.csv("data/1군전염병발병현황_년도별.csv",stringsAsFactors=F))
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_line()
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_area()
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_line() + geom_point()
ggplot(dis,aes(x=년도별,y=장티푸스,group=1)) +
geom_area(fill="cyan",alpha=0.4) + geom_line()
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름,fill=이름)) +
geom_line() + geom_point(size=6,shape=22) +
ggtitle("학생별 과목별 성적")
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름,fill=이름)) +
geom_line() + geom_point(size=6,shape=22) +
ggtitle("학생별 과목별 성적") +
theme(plot.title = element_text(color="brown", size=14, face="bold.italic"),
axis.title.x = element_text(color="black", size=14, face="bold"),
axis.title.y = element_text(color="black", size=14, face="bold"))
ggplot(sort_score,aes(x=과목,y=점수,color=이름,group=이름,fill=이름)) +
geom_line() + geom_point(size=6,shape=22) +
ggtitle("학생별 과목별 성적") +
theme(plot.title = element_text(color="brown",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
# Anscombe's Quartet
anscombe
str(anscombe)
(ans_x_mean <- anscombe %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(mean),x1,x2,x3,x4))
(ans_y_mean <- anscombe %>%
select(y1,y2,y3,y4) %>%
summarise_each(list(mean),y1,y2,y3,y4))
(ans_x_var <- anscombe %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(var),x1,x2,x3,x4))
(ans_y_var <- anscombe %>%
select(y1,y2,y3,y4) %>%
summarise_each(list(var),y1,y2,y3,y4))
ans_cor <- c()
for (i in 1:4) {
ans_cor <- c(ans_cor,cor(anscombe[,i],anscombe[,i+4]))
}
ans_cor
p1 <- ggplot(anscombe) + geom_point(aes(x1, y1), color = "darkorange", size = 3) +
theme_bw() + scale_x_continuous(breaks = seq(0, 20, 2)) + scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5, color = "cornflowerblue") +
expand_limits(x = 0, y = 0) + labs(title = "dataset 1")
p2 <- ggplot(anscombe) + geom_point(aes(x2, y2), color = "darkorange", size = 3) +
theme_bw() + scale_x_continuous(breaks = seq(0, 20, 2)) + scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5, color = "cornflowerblue") +
expand_limits(x = 0, y = 0) + labs(title = "dataset 2")
p3 <- ggplot(anscombe) + geom_point(aes(x3, y3), color = "darkorange", size = 3) +
theme_bw() + scale_x_continuous(breaks = seq(0, 20, 2)) + scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5, color = "cornflowerblue") +
expand_limits(x = 0, y = 0) + labs(title = "dataset 3")
p4 <- ggplot(anscombe) + geom_point(aes(x4, y4), color = "darkorange", size = 3) +
theme_bw() + scale_x_continuous(breaks = seq(0, 20, 2)) + scale_y_continuous(breaks = seq(0, 12, 2)) +
geom_abline(intercept = 3, slope = 0.5, color = "cornflowerblue") +
expand_limits(x = 0, y = 0) + labs(title = "dataset 4")
grid.arrange(p1, p2, p3, p4, ncol=2, top = "Anscombe's Quartet")
library(ggplot2)
mpg
str(mpg)
View(mpg)
install.packages("ggplot2")
library(ggplot2)
ggplot(mpg,aes(x=cty,y=hwy)) + geom_point(color='green',size=3) +
ggtitle("Scatter plot (cty VS hwy)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
mpg
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
mpg
data1 <- mpg
str(data1)
ggplot(data1,aes(x=cty,y=hwy)) + geom_point(color='green',size=3) +
ggtitle("Scatter plot (cty VS hwy)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"))
(data2 <- midwest)
str(midwest)
ggtitle("Scatter plot (poptotal VS popasian)") +
theme(plot.title = element_text(color="purple",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="brown",size=10,face="bold"),
axis.title.y = element_text(color="orange",size=10,face="bold"))
ggtitle("Scatter plot (poptotal VS popasian)") +
theme(plot.title = element_text(color="purple",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="brown",size=10,face="bold"),
axis.title.y = element_text(color="orange",size=10,face="bold"))
ggtitle("Scatter plot (poptotal VS popasian)") +
theme(plot.title = element_text(color="purple",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="brown",size=10,face="bold"),
axis.title.y = element_text(color="orange",size=10,face="bold"))
ggplot(data2,aes(x=poptotal,y=popasian)) +
geom_point(color='black',size=3) +
coord_cartesian(xlim = c(0,500000), ylim = c(0,10000)) +
ggtitle("Scatter plot (poptotal VS popasian)") +
theme(plot.title = element_text(color="purple",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="brown",size=10,face="bold"),
axis.title.y = element_text(color="orange",size=10,face="bold"))
mpg
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T))
library(dplyr)
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T))
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T))
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
head(5)
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(average)
?arrange
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(average,desc(average))
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average)) %>%
head(5)
mpg
mpg[,class=="suv"]
mpg[class=="suv"]
mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average)) %>%
head(5)
(select_mpg <- filter(mpg, class %in% c('subaru','toyota','nissan','jeep','mercury)))
)
))))))))))
''
'
(select_mpg <- filter(mpg, class %in% c('subaru','toyota','nissan','jeep','mercury')))
(select_mpg <- filter(mpg, class %in% c('subaru','toyota','nissan','jeep','mercury')))
select_mpg
(select_mpg <- filter(mpg, manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')))
select_mpg
select_mpg
select_mpg <- mpg %>%
filter(mpg, manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg <- mpg %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
ggplot(select_mpg,aes(x=manufacturer,y=average,fill=manufacturer)) +
geom_bar(stat="identity")
select_mpg <- arrange(select_mpg,desc(average))
select_mpg
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
ggplot(select_mpg,aes(x=manufacturer,y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg <- within(theTable,
manufacturer <- factor(manufacturer,
levels=names(sort(table(manufacturer),
decreasing=TRUE))))
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg <- within(select_mpg,
manufacturer <- factor(manufacturer,
levels=names(sort(table(manufacturer),
decreasing=TRUE))))
ggplot(select_mpg,aes(x=manufacturer,y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
ggplot(select_mpg,aes(x=reorder(manufacturer,-average),y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
ggplot(select_mpg,aes(x=reorder(manufacturer,-average),y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Boxplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
mpg
mpg %>%
filter(class=="suv") %>%
group_by(class) %>%
summarise_each(funs(mean,n()))
mpg %>%
filter(class=="suv") %>%
group_by(class) %>%
summarise(number=length(cty,na.rm=T))
mpg %>%
group_by(class) %>%
summarise(number=length(class))
ggplot(number_mpg,aes(x=reorder(class,-number),y=number)) +
geom_bar(stat="identity") +
xlab("class") + ylab("frequency") +
ggtitle("Barplot (Frequency of class)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
number_mpg <- mpg %>%
group_by(class) %>%
summarise(number=length(class))
ggplot(number_mpg,aes(x=reorder(class,-number),y=number)) +
geom_bar(stat="identity") +
xlab("class") + ylab("frequency") +
ggtitle("Barplot (Frequency of class)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
economics
str(economics)
ggplot(economics,aes(x=date,y=psavert)) +
geom_line() +
ggtitle("Time series plot of psavert") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=12,face="bold"),
axis.title.y = element_text(color="blue",size=12,face="bold"))
find_mpg <- mpg %>%
filter(class %in% c("compact","subcompact","suv")) %>%
group_by(class)
find_mpg
ggplot(find_mpg,aes(x=class,y=cty,fill=class)) +
geom_boxplot()
ggplot(find_mpg,aes(x=class,y=cty,fill=class)) +
geom_boxplot() +
ggtitle("Boxplot of cty (by class") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
ggplot(find_mpg,aes(x=class,y=cty,fill=class)) +
geom_boxplot() +
ggtitle("Boxplot of cty (by class)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
diamonds
str(diamonds)
View(diamonds)
number_diamonds <- diamonds %>%
group_by(cut) %>%
summarise(number=length(cut))
number_diamonds
ggplot(number_diamonds,aes(x=reorder(cut,-number),y=number,fill=cut)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("frequency") +
ggtitle("Barplot (Frequency of cut)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
sort_diamonds <- arrange(diamonds,cut)
View(sort_diamonds)
ggplot(sort_diamonds,aes(x=cut,y=price,color=cut,group=color)) + geom_line()
ggplot(sort_diamonds,aes(x=cut,y=price,color=cut,group=color)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("price") +
ggtitle("Barplot of price") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(sort_diamonds,aes(x=cut,y=price,color=cut,group=cut)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("price") +
ggtitle("Barplot of price") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
sort_diamonds <- diamonds %>%
group_by(cut) %>%
summarise(average=mean(price,na.rm=T)) %>%
arrange(desc(average))
sort_diamonds
sort_diamonds <- diamonds %>%
group_by(cut) %>%
summarise(average=mean(price,na.rm=T)) %>%
arrange(desc(average))
sort_diamonds
ggplot(sort_diamonds,aes(x=reorder(cut,-average),y=average,fill=cut)) +
geom_bar(stat="identity") +
xlab("cut") + ylab("mean of price") +
ggtitle("Barplot of price") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
str(diamonds)
reorder_diamonds <- arrange(diamonds,cut,order)
reorder_diamonds <- arrange(diamonds,cut,order)
reorder_diamonds <- arrange(diamonds,cut)
reorder_diamonds <- arrange(reorder_diamonds,order)
reorder_diamonds <- arrange(diamonds,cut,color)
reorder_diamonds
reorder_diamonds <- diamonds %>%
group_by(cut,color) %>%
summarise(average=mean(price,na.rm=T))
reorder_diamonds
View(reorder_diamonds)
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut)) +
geom_line() + geom_point(size=3,shape=2) +
xlab("cut") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut)) +
geom_line() + geom_point(size=3,shape=1) +
xlab("cut") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
reorder_diamonds <- diamonds %>%
group_by(cut,color) %>%
summarise(average=mean(price,na.rm=T))
reorder_diamonds
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=average,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
str(reorder_diamonds)
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=average,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=3,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line(aes(linetype=cut)) + geom_point(aes(size=average),shape=22) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line(aes(linetype=cut)) + geom_point(aes(size=average)) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average)) %>%
head(5)
mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(class=="suv") %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
ggplot(select_mpg,aes(x=reorder(manufacturer,-average),y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Barplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
