xlab("cut") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
reorder_diamonds <- diamonds %>%
group_by(cut,color) %>%
summarise(average=mean(price,na.rm=T))
reorder_diamonds
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=average,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
str(reorder_diamonds)
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=average,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line() + geom_point(size=3,shape=1) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line(aes(linetype=cut)) + geom_point(aes(size=average),shape=22) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
ggplot(reorder_diamonds,aes(x=color,y=average,color=cut,group=cut,fill=cut)) +
geom_line(aes(linetype=cut)) + geom_point(aes(size=average)) +
xlab("color") + ylab("mean of price") +
ggtitle("Line graph of price (By cut and color)") +
theme(plot.title = element_text(color="orange",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="brown",size=12,face="bold"))
mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average)) %>%
head(5)
mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
select_mpg <- mpg %>%
group_by(manufacturer) %>%
filter(class=="suv") %>%
filter(manufacturer %in% c('subaru','toyota','nissan','jeep','mercury')) %>%
summarise(average=mean(cty,na.rm=T)) %>%
arrange(desc(average))
select_mpg
ggplot(select_mpg,aes(x=reorder(manufacturer,-average),y=average,fill=manufacturer)) +
geom_bar(stat="identity") +
xlab("manufacturer") + ylab("mean of cty") +
ggtitle("Barplot (High cty in suv)") +
theme(plot.title = element_text(color="black",size=16,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=12,face="bold"),
axis.title.y = element_text(color="black",size=12,face="bold"))
setwd("D:/Workplace/R_Data_Analysis/part2/stage1_Wordcloud/6월 11일 NLP 분석 과제")
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(stringr)
useSejongDic()
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul02 <- readLines("data/응답소_2015_02.txt")
seoul03 <- readLines("data/응답소_2015_03.txt")
seoul04 <- readLines("data/응답소_2015_04.txt")
seoul05 <- readLines("data/응답소_2015_05.txt")
seoul06 <- readLines("data/응답소_2015_06.txt")
seoul07 <- readLines("data/응답소_2015_07.txt")
seoul08 <- readLines("data/응답소_2015_08.txt")
seoul09 <- readLines("data/응답소_2015_09.txt")
seoul10 <- readLines("data/응답소_2015_10.txt")
seoul11 <- readLines("data/응답소_2015_11.txt")
seoul12 <- readLines("data/응답소_2015_12.txt")
seoul01_1 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01_1),30)
cdata1 <- unlist(seoul01_1)
seoul01_1 <- str_replace_all(cdata1,"[^[:alpha:]]","")
seoul01_1 <- gsub(" ","",seoul01_1)
length(seoul01_1)
seoul01_1 <- Filter(function(x) {nchar(x)>=2}, seoul01_1)
length(seoul01_1)
head(seoul01_1)
head(seoul01_1,30)
seoul01_1
seoul01_1 <- Filter(function(x) {nchar(x)<=5}, seoul01_1)
length(seoul01_1)
head(seoul01_1,30)
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01),30)
cdata1 <- unlist(seoul01)
seoul01 <- str_replace_all(cdata1,"[^[:alpha:]]","")
seoul01 <- gsub(" ","",seoul01)
seoul01 <- Filter(function(x) {nchar(x)>=2}, seoul01)
seoul01 <- Filter(function(x) {nchar(x)<=5}, seoul01)
seoul01
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul01 <- gsub((txt[i]),"",seoul01)
}
head(table(seoul01),30)
seoul01
head(table(seoul01),30)
head(sort(table(seoul01),decreasing=T),30)
write(unlist(seoul01),"data/seoul01.txt")
seoul01 <- read.table("data/seoul01.txt")
head(sort(table(seoul01),decreasing=T),30)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul01 <- gsub((txt[i]),"",seoul01)
}
write(unlist(seoul01),"data/seoul01.txt")
seoul01 <- read.table("data/seoul01.txt")
head(sort(table(seoul01),decreasing=T),30)
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01),30)
cdata1 <- unlist(seoul01)
seoul01 <- str_replace_all(cdata1,"[^[:alpha:]]","")
seoul01 <- gsub(" ","",seoul01)
seoul01 <- Filter(function(x) {nchar(x)>=2}, seoul01)
seoul01 <- Filter(function(x) {nchar(x)<=5}, seoul01)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul01 <- gsub((txt[i]),"",seoul01)
}
write(unlist(seoul01),"data/seoul01.txt")
seoul01 <- read.table("data/seoul01.txt")
View(seoul01)
View(seoul01)
head(sort(table(seoul01),decreasing=T),30)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul01 <- gsub((txt[i]),"",seoul01)
}
write(unlist(seoul01),"data/seoul01.txt")
seoul01 <- read.table("data/seoul01.txt")
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01),30)
cdata1 <- unlist(seoul01)
seoul01 <- str_replace_all(cdata1,"[^[:alpha:]]","")
seoul01 <- gsub(" ","",seoul01)
seoul01 <- Filter(function(x) {nchar(x)>=2 | nchar(x)<=5}, seoul01)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul01 <- gsub((txt[i]),"",seoul01)
}
write(unlist(seoul01),"data/seoul01.txt")
seoul01 <- read.table("data/seoul01.txt")
head(sort(table(seoul01),decreasing=T),30)
seoul01 <- Filter(function(x) {nchar(x)>=2}, seoul01)
head(seoul01)
seoul01 <- as.character(seoul01)
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01),30)
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01),30)
cdata1 <- unlist(seoul01)
seoul01 <- str_replace_all(cdata1,"[^[:alpha:]]","")
seoul01 <- gsub(" ","",seoul01)
seoul01 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, seoul01)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul01 <- gsub((txt[i]),"",seoul01)
}
write(unlist(seoul01),"data/seoul01.txt")
seoul01 <- read.table("data/seoul01.txt")
head(sort(table(seoul01),decreasing=T),30)
nrow(seoul01)
wordcount1 <- table(seoul01)
head(sort(wordcount1,decreasing=T),30)
palete <- brewer.pal(12,"Paired")
wordcloud(names(wordcount1),freq=wordcount1,scale=c(5,0.3),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
head(wordcount1)
head(sort(wordcount1,decreasing=T),30)
wordcount1
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01),30)
cdata1 <- unlist(seoul01)
seoul01 <- str_replace_all(cdata1,"[^[:alpha:]]","")
seoul01 <- str_replace_all(cdata1,"[A-z]","")
seoul01 <- gsub(" ","",seoul01)
seoul01 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, seoul01)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul01 <- gsub((txt[i]),"",seoul01)
}
write(unlist(seoul01),"data/seoul01.txt")
seoul01 <- read.table("data/seoul01.txt")
head(sort(table(seoul01),decreasing=T),30)
nrow(seoul01)
wordcount1 <- table(seoul01)
head(sort(wordcount1,decreasing=T),30)
palete <- brewer.pal(12,"Paired")
wordcloud(names(wordcount1),freq=wordcount1,scale=c(5,0.3),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
View(seoul01)
wordcloud(names(wordcount1),freq=wordcount1,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcount1
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
head(unlist(seoul01),30)
cdata1 <- unlist(seoul01)
seoul01 <- str_replace_all(cdata1,"[^[:alpha:]]","")
seoul01 <- str_replace_all(cdata1,"[A-z]","")
seoul01 <- gsub(" ","",seoul01)
seoul01 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=4}, seoul01)
nrow(seoul01)
wordcount1 <- table(seoul01)
head(sort(wordcount1,decreasing=T),30)
seoul_2015 <- c(seoul01,seoul02,seoul03,seoul04,seoul05,seoul06,
seoul07,seoul08,seoul09,seoul10,seoul11,seoul12)
head(seoul_2015)
seoul_2015 <- sapply(seoul_2015,extractNoun,USE.NAMES=F)
View(seoul_2015)
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul02 <- readLines("data/응답소_2015_02.txt")
seoul03 <- readLines("data/응답소_2015_03.txt")
seoul04 <- readLines("data/응답소_2015_04.txt")
seoul05 <- readLines("data/응답소_2015_05.txt")
seoul06 <- readLines("data/응답소_2015_06.txt")
seoul07 <- readLines("data/응답소_2015_07.txt")
seoul08 <- readLines("data/응답소_2015_08.txt")
seoul09 <- readLines("data/응답소_2015_09.txt")
seoul10 <- readLines("data/응답소_2015_10.txt")
seoul11 <- readLines("data/응답소_2015_11.txt")
seoul12 <- readLines("data/응답소_2015_12.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
seoul02 <- sapply(seoul02,extractNoun,USE.NAMES=F)
seoul03 <- sapply(seoul03,extractNoun,USE.NAMES=F)
seoul04 <- sapply(seoul04,extractNoun,USE.NAMES=F)
seoul05 <- sapply(seoul05,extractNoun,USE.NAMES=F)
seoul06 <- sapply(seoul06,extractNoun,USE.NAMES=F)
seoul07 <- sapply(seoul07,extractNoun,USE.NAMES=F)
seoul08 <- sapply(seoul08,extractNoun,USE.NAMES=F)
seoul09 <- sapply(seoul09,extractNoun,USE.NAMES=F)
seoul10 <- sapply(seoul10,extractNoun,USE.NAMES=F)
seoul11 <- sapply(seoul11,extractNoun,USE.NAMES=F)
seoul12 <- sapply(seoul12,extractNoun,USE.NAMES=F)
View(seoul04)
View(seoul03)
seoul_2015 <- c(seoul01,seoul02,seoul03,seoul04,seoul05,seoul06,
seoul07,seoul08,seoul09,seoul10,seoul11,seoul12)
View(seoul_2015)
head(unlist(seoul_2015),30)
cdata <- unlist(seoul_2015)
seoul_2015 <- str_replace_all(cdata,"[^[:alpha:]]","") # 한글, 영어 이외는 제거
seoul_2015 <- str_replace_all(cdata,"[A-z]","") # 모든 영문자 제거
seoul_2015 <- gsub(" ","",seoul_2015)
length(seoul_2015)
View(seoul08)
View(seoul07)
str(seoul_2015)
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul02 <- readLines("data/응답소_2015_02.txt")
seoul03 <- readLines("data/응답소_2015_03.txt")
seoul04 <- readLines("data/응답소_2015_04.txt")
seoul05 <- readLines("data/응답소_2015_05.txt")
seoul06 <- readLines("data/응답소_2015_06.txt")
seoul07 <- readLines("data/응답소_2015_07.txt")
seoul08 <- readLines("data/응답소_2015_08.txt")
seoul09 <- readLines("data/응답소_2015_09.txt")
seoul10 <- readLines("data/응답소_2015_10.txt")
seoul11 <- readLines("data/응답소_2015_11.txt")
seoul12 <- readLines("data/응답소_2015_12.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
seoul02 <- sapply(seoul02,extractNoun,USE.NAMES=F)
seoul03 <- sapply(seoul03,extractNoun,USE.NAMES=F)
seoul04 <- sapply(seoul04,extractNoun,USE.NAMES=F)
seoul05 <- sapply(seoul05,extractNoun,USE.NAMES=F)
seoul06 <- sapply(seoul06,extractNoun,USE.NAMES=F)
seoul07 <- sapply(seoul07,extractNoun,USE.NAMES=F)
seoul08 <- sapply(seoul08,extractNoun,USE.NAMES=F)
seoul09 <- sapply(seoul09,extractNoun,USE.NAMES=F)
seoul10 <- sapply(seoul10,extractNoun,USE.NAMES=F)
seoul11 <- sapply(seoul11,extractNoun,USE.NAMES=F)
seoul12 <- sapply(seoul12,extractNoun,USE.NAMES=F)
View(seoul12)
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul02 <- readLines("data/응답소_2015_02.txt")
seoul03 <- readLines("data/응답소_2015_03.txt")
seoul04 <- readLines("data/응답소_2015_04.txt")
seoul05 <- readLines("data/응답소_2015_05.txt")
seoul06 <- readLines("data/응답소_2015_06.txt")
seoul07 <- readLines("data/응답소_2015_07.txt")
seoul08 <- readLines("data/응답소_2015_08.txt")
seoul09 <- readLines("data/응답소_2015_09.txt")
seoul10 <- readLines("data/응답소_2015_10.txt")
seoul11 <- readLines("data/응답소_2015_11.txt")
seoul12 <- readLines("data/응답소_2015_12.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
seoul01 <- unlist(seoul01)
seoul02 <- sapply(seoul02,extractNoun,USE.NAMES=F)
seoul02 <- unlist(seoul02)
seoul03 <- sapply(seoul03,extractNoun,USE.NAMES=F)
seoul03 <- unlist(seoul03)
seoul04 <- sapply(seoul04,extractNoun,USE.NAMES=F)
seoul04 <- unlist(seoul04)
seoul05 <- sapply(seoul05,extractNoun,USE.NAMES=F)
seoul05 <- unlist(seoul05)
seoul06 <- sapply(seoul06,extractNoun,USE.NAMES=F)
seoul06 <- unlist(seoul06)
seoul07 <- sapply(seoul07,extractNoun,USE.NAMES=F)
seoul07 <- unlist(seoul07)
seoul08 <- sapply(seoul08,extractNoun,USE.NAMES=F)
seoul08 <- unlist(seoul08)
seoul09 <- sapply(seoul09,extractNoun,USE.NAMES=F)
seoul09 <- unlist(seoul09)
seoul10 <- sapply(seoul10,extractNoun,USE.NAMES=F)
seoul10 <- unlist(seoul10)
seoul11 <- sapply(seoul11,extractNoun,USE.NAMES=F)
seoul11 <- unlist(seoul11)
seoul12 <- sapply(seoul12,extractNoun,USE.NAMES=F)
seoul12 <- unlist(seoul12)
seoul_2015 <- c(seoul01,seoul02,seoul03,seoul04,seoul05,seoul06,
seoul07,seoul08,seoul09,seoul10,seoul11,seoul12)
length(seoul_2015)
head(unlist(seoul_2015),30)
head(seoul_2015,30)
seoul_2015 <- str_replace_all(seoul_2015,"[^[:alpha:]]","") # 한글, 영어 이외는 제거
seoul_2015 <- str_replace_all(seoul_2015,"[A-z]","") # 모든 영문자 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\s","") # 공백 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\d","") # 숫자 제거
head(seoul_2015,100)
tail(seoul_2015,100)
seoul_2015
View(seoul_2015)
seoul_2015 <- str_replace_all(seoul_2015,"[^[:alpha:]]","") # 한글, 영어 이외는 제거
seoul_2015 <- str_replace_all(seoul_2015,"[A-z]","") # 모든 영문자 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\s","") # 공백 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\d","") # 숫자 제거
seoul_2015 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=4}, seoul_2015)
length(seoul_2015)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul_2015 <- gsub((txt[i]),"",seoul_2015)
}
length(seoul_2015)
write(unlist(seoul_2015),"data/seoul_2015_1.txt")
seoul_2015 <- read.table("data/seoul_2015_1.txt")
nrow(seoul_2015)
wordcount <- table(seoul_2015)
head(sort(wordcount,decreasing=T),30)
palete <- brewer.pal(12,"Paired")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
legend(0.2,0.8,"2015년 서울시 응답소 요청사항 분석",cex=0.8,fill=NA,border=NA,bg="white",
text.col="blue",text.font=2,box.col="blue")
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul02 <- readLines("data/응답소_2015_02.txt")
seoul03 <- readLines("data/응답소_2015_03.txt")
seoul04 <- readLines("data/응답소_2015_04.txt")
seoul05 <- readLines("data/응답소_2015_05.txt")
seoul06 <- readLines("data/응답소_2015_06.txt")
seoul07 <- readLines("data/응답소_2015_07.txt")
seoul08 <- readLines("data/응답소_2015_08.txt")
seoul09 <- readLines("data/응답소_2015_09.txt")
seoul10 <- readLines("data/응답소_2015_10.txt")
seoul11 <- readLines("data/응답소_2015_11.txt")
seoul12 <- readLines("data/응답소_2015_12.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
seoul01 <- unlist(seoul01)
seoul02 <- sapply(seoul02,extractNoun,USE.NAMES=F)
seoul02 <- unlist(seoul02)
seoul03 <- sapply(seoul03,extractNoun,USE.NAMES=F)
seoul03 <- unlist(seoul03)
seoul04 <- sapply(seoul04,extractNoun,USE.NAMES=F)
seoul04 <- unlist(seoul04)
seoul05 <- sapply(seoul05,extractNoun,USE.NAMES=F)
seoul05 <- unlist(seoul05)
seoul06 <- sapply(seoul06,extractNoun,USE.NAMES=F)
seoul06 <- unlist(seoul06)
seoul07 <- sapply(seoul07,extractNoun,USE.NAMES=F)
seoul07 <- unlist(seoul07)
seoul08 <- sapply(seoul08,extractNoun,USE.NAMES=F)
seoul08 <- unlist(seoul08)
seoul09 <- sapply(seoul09,extractNoun,USE.NAMES=F)
seoul09 <- unlist(seoul09)
seoul10 <- sapply(seoul10,extractNoun,USE.NAMES=F)
seoul10 <- unlist(seoul10)
seoul11 <- sapply(seoul11,extractNoun,USE.NAMES=F)
seoul11 <- unlist(seoul11)
seoul12 <- sapply(seoul12,extractNoun,USE.NAMES=F)
seoul12 <- unlist(seoul12)
seoul_2015 <- c(seoul01,seoul02,seoul03,seoul04,seoul05,seoul06,
seoul07,seoul08,seoul09,seoul10,seoul11,seoul12)
length(seoul_2015)
head(seoul_2015,30)
seoul_2015 <- str_replace_all(seoul_2015,"[^[:alpha:]]","") # 한글, 영어 이외는 제거
seoul_2015 <- str_replace_all(seoul_2015,"[A-z]","") # 모든 영문자 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\s","") # 공백 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\d","") # 숫자 제거
seoul_2015 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=3}, seoul_2015)
length(seoul_2015)
seoul_2015
seoul_2015[1000:2000]
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul_2015 <- gsub((txt[i]),"",seoul_2015)
}
length(seoul_2015)
seoul_2015 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=3}, seoul_2015)
length(seoul_2015)
seoul_2015[2000:4000]
seoul_2015[3000:4000]
seoul_2015[4000:5000]
seoul_2015[100000:101000]
seoul_2015[101000:102000]
length(seoul_2015)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul_2015 <- gsub((txt[i]),"",seoul_2015)
}
seoul_2015 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=3}, seoul_2015)
length(seoul_2015)
seoul01 <- readLines("data/응답소_2015_01.txt")
seoul02 <- readLines("data/응답소_2015_02.txt")
seoul03 <- readLines("data/응답소_2015_03.txt")
seoul04 <- readLines("data/응답소_2015_04.txt")
seoul05 <- readLines("data/응답소_2015_05.txt")
seoul06 <- readLines("data/응답소_2015_06.txt")
seoul07 <- readLines("data/응답소_2015_07.txt")
seoul08 <- readLines("data/응답소_2015_08.txt")
seoul09 <- readLines("data/응답소_2015_09.txt")
seoul10 <- readLines("data/응답소_2015_10.txt")
seoul11 <- readLines("data/응답소_2015_11.txt")
seoul12 <- readLines("data/응답소_2015_12.txt")
seoul01 <- sapply(seoul01,extractNoun,USE.NAMES=F)
seoul01 <- unlist(seoul01)
seoul02 <- sapply(seoul02,extractNoun,USE.NAMES=F)
seoul02 <- unlist(seoul02)
seoul03 <- sapply(seoul03,extractNoun,USE.NAMES=F)
seoul03 <- unlist(seoul03)
seoul04 <- sapply(seoul04,extractNoun,USE.NAMES=F)
seoul04 <- unlist(seoul04)
seoul05 <- sapply(seoul05,extractNoun,USE.NAMES=F)
seoul05 <- unlist(seoul05)
seoul06 <- sapply(seoul06,extractNoun,USE.NAMES=F)
seoul06 <- unlist(seoul06)
seoul07 <- sapply(seoul07,extractNoun,USE.NAMES=F)
seoul07 <- unlist(seoul07)
seoul08 <- sapply(seoul08,extractNoun,USE.NAMES=F)
seoul08 <- unlist(seoul08)
seoul09 <- sapply(seoul09,extractNoun,USE.NAMES=F)
seoul09 <- unlist(seoul09)
seoul10 <- sapply(seoul10,extractNoun,USE.NAMES=F)
seoul10 <- unlist(seoul10)
seoul11 <- sapply(seoul11,extractNoun,USE.NAMES=F)
seoul11 <- unlist(seoul11)
seoul12 <- sapply(seoul12,extractNoun,USE.NAMES=F)
seoul12 <- unlist(seoul12)
seoul_2015 <- c(seoul01,seoul02,seoul03,seoul04,seoul05,seoul06,
seoul07,seoul08,seoul09,seoul10,seoul11,seoul12)
length(seoul_2015)
head(seoul_2015,30)
seoul_2015 <- str_replace_all(seoul_2015,"[^[:alpha:]]","") # 한글, 영어 이외는 제거
seoul_2015 <- str_replace_all(seoul_2015,"[A-z]","") # 모든 영문자 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\s","") # 공백 제거
seoul_2015 <- str_replace_all(seoul_2015,"\\d","") # 숫자 제거
seoul_2015 <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=3}, seoul_2015)
length(seoul_2015)
txt <- readLines("data/seoul_gsub.txt")
for (i in 1:length(txt)) {
seoul_2015 <- gsub((txt[i]),"",seoul_2015)
}
write(unlist(seoul_2015),"data/seoul_2015_1.txt")
seoul_2015 <- read.table("data/seoul_2015_1.txt")
nrow(seoul_2015)
wordcount <- table(seoul_2015)
head(sort(wordcount,decreasing=T),30)
palete <- brewer.pal(12,"Paired")
par(oma=rep(0.5,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
legend(0.2,0.8,"2015년 서울시 응답소 요청사항 분석",cex=0.8,fill=NA,border=NA,bg="white",
text.col="blue",text.font=2,box.col="blue")
wordcount
wordcount[1:1000]
wordcount[1000:2000]
wordcount[2000:3000]
wordcount[3000:4000]
wordcount[4000:5000]
wordcount[5000:6000]
wordcount[6000:7000]
wordcount[7000:8000]
wordcount[8000:9000]
wordcount[9000:10000]
wordcount[1000:10516]
wordcount[10000:10516]
