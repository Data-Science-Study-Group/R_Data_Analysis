hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
head(hiphop,100)
# 한글과 영어 분리
hiphop <- tm_map(hiphop,removeNumbers) # 숫자 제거
# 한글과 영어 분리
hiphop_kor <- sqldf('SELECT REGEXP_REPLACE('ab12cd한글(테스트)','[a-z]','') AS remove_digits')
# 한글과 영어 분리
hiphop_kor <- sqldf('SELECT REGEXP_REPLACE('ab12cd한글(테스트)','[a-z]','') AS remove_digits')
# 한글과 영어 분리
hiphop_kor <- sqldf('select regexp_replace(ab12cd한글(테스트),'[a-z]','') as remove_digits')
# 한글과 영어 분리
hiphop_eng <- sqldf("select regexp_replace(ab12cd한글(테스트),'[가-힣]','') as remove_digits")
hiphop <- readLines("hiphop.txt")
hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
head(hiphop,100)
head(hiphop,200)
hiphop <- readLines("hiphop.txt")
hiphop <- Corpus(VectorSource(hiphop))
inspect(hiphop)
hiphop <- tm_map(hiphop,stripWhitespace) # 여러개 공백 -> 하나의 공백
hiphop <- tm_map(hiphop,tolower) # 대문자 -> 소문자
hiphop <- tm_map(hiphop,removeNumbers) # 숫자 제거
hiphop <- tm_map(hiphop,removePunctuation) # 문자 제거
hiphop
hiphop1 <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
head(hiphop1,100)
hiphop <- readLines("hiphop.txt")
hiphop1 <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
head(hiphop1,100)
hiphop <- Corpus(VectorSource(hiphop))
inspect(hiphop)
hiphop <- tm_map(hiphop,stripWhitespace) # 여러개 공백 -> 하나의 공백
hiphop <- tm_map(hiphop,tolower) # 대문자 -> 소문자
hiphop <- tm_map(hiphop,removeNumbers) # 숫자 제거
hiphop <- tm_map(hiphop,removePunctuation) # 문자 제거
sword2 <- c(stopwords('en'),"and","but","not") # 불용어 추가
hiphop <- tm_map(hiphop,removeWords,sword2) #불용어 제거
inspect(hiphop)
hiphop <- TermDocumentMatrix(hiphop)
hiphop <- readLines("hiphop.txt")
hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
head(hiphop,100)
hiphop <- Corpus(VectorSource(hiphop))
inspect(hiphop)
hiphop <- tm_map(hiphop,stripWhitespace) # 여러개 공백 -> 하나의 공백
hiphop <- tm_map(hiphop,tolower) # 대문자 -> 소문자
hiphop <- tm_map(hiphop,removeNumbers) # 숫자 제거
hiphop <- tm_map(hiphop,removePunctuation) # 문자 제거
stopword2 <- c(stopwords('en'),"and","but","not") # 불용어 추가
hiphop <- tm_map(hiphop,removeWords,stopword2) #불용어 제거
inspect(hiphop)
hiphop <- TermDocumentMatrix(hiphop)
findFreqTerms(hiphop,5)
hiphop <- tm_map(hiphop,removeWords,stopword2) #불용어 제거
findFreqTerms(hiphop,10)
hiphop <- as.matrix(hiphop)
nrow(hiphop)
freq1 <- sort(rowSums(hiphop),decreasing=T)
head(freq1,20)
str(hiphop)
hiphop <- readLines("hiphop.txt")
hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
hiphop <- Filter(function(x) {nchar(x)>=2}, hiphop)
head(hiphop,100)
setwd("D:/Workplace/R_Data_Analysis/part2/stage2_Graph/6월 12일 그래프 과제")
hiphop <- readLines("hiphop.txt")
hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
hiphop <- Filter(function(x) {nchar(x)>=2}, hiphop)
View(hiphop)
hiphop <- readLines("hiphop.txt")
hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
hiphop <- Filter(function(x) {nchar(x)>=2}, hiphop) # 2글자 이상인 경우만 추출
head(hiphop,100)
hiphop <- Corpus(VectorSource(hiphop))
inspect(hiphop)
hiphop <- tm_map(hiphop,stripWhitespace) # 여러개 공백 -> 하나의 공백
hiphop <- tm_map(hiphop,tolower) # 대문자 -> 소문자
hiphop <- tm_map(hiphop,removeNumbers) # 숫자 제거
hiphop <- tm_map(hiphop,removePunctuation) # 문자 제거
stopword2 <- c(stopwords('en'),"and","but","not","설국열","들이",
"frien","때까","니가","하기","al","re","기다","fas","tim","tende",
"마르","jus","lov","dow","닳도","모르겠","좋았","Gir","gam","소프라",
"eidorad","돼주","알았","아프","집으","벌릴테","악보따","아인슈타",
"fuc","이기","girlfrien","버티겠","바랬잖","nigh","poin","zer",
"베토","씌우","뜬눈우","ambitio","놓치지않","tim","eh","reaso",
"빠라바빠","madeleine","studi") # 불용어 추가
hiphop <- tm_map(hiphop,removeWords,stopword2) #불용어 제거
hiphop <- TermDocumentMatrix(hiphop)
findFreqTerms(hiphop,10)
hiphop <- as.matrix(hiphop)
nrow(hiphop)
freq1 <- sort(rowSums(hiphop),decreasing=T)
hiphop <- readLines("hiphop.txt")
hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
hiphop <- Filter(function(x) {nchar(x)>=2}, hiphop) # 2글자 이상인 경우만 추출
head(hiphop,100)
hiphop <- Corpus(VectorSource(hiphop))
inspect(hiphop)
hiphop <- tm_map(hiphop,stripWhitespace) # 여러개 공백 -> 하나의 공백
hiphop <- tm_map(hiphop,tolower) # 대문자 -> 소문자
hiphop <- tm_map(hiphop,removeNumbers) # 숫자 제거
hiphop <- tm_map(hiphop,removePunctuation) # 문자 제거
stopword2 <- c(stopwords('en'),"and","but","not","설국열","들이",
"frien","때까","니가","하기","al","re","기다","fas","tim","tende",
"마르","jus","lov","dow","닳도","모르겠","좋았","gir","gam","소프라",
"eidorad","돼주","알았","아프","집으","벌릴테","악보따","아인슈타",
"fuc","이기","girlfrien","버티겠","바랬잖","nigh","poin","zer",
"베토","씌우","뜬눈우","ambitio","놓치지않","tim","eh","reaso",
"빠라바빠","madeleine","studi","’","’m","nee") # 불용어 추가
hiphop <- tm_map(hiphop,removeWords,stopword2) #불용어 제거
hiphop <- TermDocumentMatrix(hiphop)
findFreqTerms(hiphop,10) # 빈도수가 10 이상인 경우
hiphop <- as.matrix(hiphop)
nrow(hiphop)
freq1 <- sort(rowSums(hiphop),decreasing=T)
head(freq1,20)
wordcount <- sort(rowSums(hiphop),decreasing=T)
head(wordcount,20)
display.brewer.all(n=10,exact.n=F)
palete <- brewer.pal(10,"Paired")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=10,
colors=palete,random.order=F,random.color=T)
legend(0.3,0.85,"hiphop 가사 분석결과",cex=0.8,fill=NA,border=NA,bg="white",
text.col="red",text.font=2,box.col="blue")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=1,
colors=palete,random.order=F,random.color=T)
par(oma=rep(0,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=1,
colors=palete,random.order=F,random.color=T)
legend(0.3,0.85,"hiphop 가사 분석결과",cex=0.8,fill=NA,border=NA,bg="white",
text.col="red",text.font=2,box.col="blue")
wordcloud(names(wordcount),freq=wordcount,scale=c(10,1),rot.per=0.25,min.freq=1,
colors=palete,random.order=F,random.color=T)
wordcloud(names(wordcount),freq=wordcount,scale=c(6,0.5),rot.per=0.25,min.freq=1,
colors=palete,random.order=F,random.color=T)
?wordcloud
legend(0.3,0.85,"hiphop 가사 분석결과",cex=0.8,fill=NA,border=NA,bg="white",
text.col="red",text.font=2,box.col="blue")
wordcloud(names(wordcount),freq=wordcount,scale=c(6,1),rot.per=0.25,min.freq=1,
colors=palete,random.order=F,random.color=T)
legend(0.3,0.85,"hiphop 가사 분석결과",cex=0.8,fill=NA,border=NA,bg="white",
text.col="red",text.font=2,box.col="blue")
top10 <- head(sort(wordcount,decreasing=T),10)
top10
str(top10)
top10 <- as.data.frame(top10)
top10
top10 %>%
mutate(pct=top10/sum(top10)*100)
options(digits=2)
top10 %>%
mutate(pct=top10/sum(top10)*100)
top10 %>%
mutate(noun=names(top10)) %>%
mutate(pct=top10/sum(top10)*100)
wordcount <- table(sort(rowSums(hiphop),decreasing=T))
top10 <- head(sort(wordcount,decreasing=T),10)
top10
wordcount <- sort(rowSums(hiphop),decreasing=T)
names(wordcount)
top10 <- head(sort(wordcount,decreasing=T),10)
top10$noun <- rownames(top10)
rownames(top10)
colnames(top10)
top10
top10 <- head(sort(wordcount,decreasing=T),10)
top10
top10 <- as.data.frame(top10)
rownames(top10)
top10 %>%
mutate(noun=rownames(top10))
top10 <- cbind.data.frame(rownames(top10),top10)
top10
top10 <- cbind.data.frame(rownames(top10)=noun,top10)
?cbind.data.frame
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 %>%
mutate(noun=rownames(top10))
top10 <- cbind.data.frame(noun,top10)
top10
top10$noun
colnames(top10)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%s\n%4.1f",top10,pct),'%',sep='')) %>%
arrange(desc(top10)) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
top10
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10
ggplot(top10,aes(x="",y=freq,fill=noun)) +
geom_bar(stat="identity", width=1)
ggplot(top10,aes(x="",y=freq,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0)
ggplot(top10,aes(x="",y=freq,fill=noun)) +
geom_bar(stat="identity", width=1)
top10
?geom_bar
wordcount[1:10]
ggplot(top10,aes(x="",y=freq,fill=noun)) +
geom_bar(stat="identity", width=1) +
scale_x_discrete(limits=c('yah','하나','love','오늘','사랑','like','우리','시간','역사','bang'))
ggplot(top10,aes(x="",y=freq,fill=noun)) +
geom_bar(stat="identity", width=1)
ggplot(top10,aes(x="",y=freq,fill=noun)) +
geom_bar(stat="identity", width=1) +
scale_y_discrete(limits=c('yah','하나','love','오늘','사랑','like','우리','시간','역사','bang'))
ggplot(top10,aes(x="",y=freq,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("") + ylab("") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
top10
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1)
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("") + ylab("") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%s\n%4.1f",noun,pct),'%',sep='')) %>%
arrange(desc(top10)) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("") + ylab("") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep='')) %>%
arrange(desc(top10)) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("") + ylab("") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1)
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep='')) %>%
arrange(desc(noun)) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep='')) %>%
arrange(desc(rownames(top10))) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
top10$noun <- as.data.frame(rownames(top10))
top10
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
top10$noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep='')) %>%
arrange(desc(top10)) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10
top10 %>% arrange(desc(noun))
str(top10)
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
top10
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep='')) %>%
arrange(desc(top10)) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
top10
top10 <- head(sort(wordcount,decreasing=T),10)
names(top10)
str(names(top10))
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep='')) %>%
arrange(desc(top10)) %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10
ggplot(top10,aes(x="",y=reorder(pct,-pct),fill=noun)) +
geom_bar(stat="identity", width=1)
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1)
?arrange
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep=''))
top10
top10 <- top10[c(2,7,4,9,8,5,1,3,6,10)]
top10 <- top10[c(2,7,4,9,8,5,1,3,6,10),]
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%4.1f",pct),'%',sep=''))
top10 <- top10[c(2,7,4,9,8,5,1,3,6,10),]
top10 <- top10 %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("") + ylab("") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%s\n%4.1f",noun,pct),'%',sep=''))
top10 <- top10[c(2,7,4,9,8,5,1,3,6,10),]
top10 <- top10 %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
top10
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
colnames(top10) <- c("noun","top10")
top10
top10$noun
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
colnames(top10) <- c("noun","top10")
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%s\n%4.1f",noun,pct),'%',sep=''))
top10 <- top10[c(2,7,4,9,8,5,1,3,6,10),]
top10 <- top10 %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
top10
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("") + ylab("") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
wordcloud(names(wordcount),freq=wordcount,scale=c(6,1),rot.per=0.25,min.freq=1,
colors=palete,random.order=F,random.color=T)
hiphop <- readLines("hiphop.txt")
hiphop <- unlist(sapply(hiphop,extractNoun,USE.NAMES=F))
hiphop <- Filter(function(x) {nchar(x)>=2}, hiphop) # 2글자 이상인 경우만 추출
head(hiphop,100)
hiphop <- Corpus(VectorSource(hiphop))
inspect(hiphop)
hiphop <- tm_map(hiphop,stripWhitespace) # 여러개 공백 -> 하나의 공백
hiphop <- tm_map(hiphop,tolower) # 대문자 -> 소문자
hiphop <- tm_map(hiphop,removeNumbers) # 숫자 제거
hiphop <- tm_map(hiphop,removePunctuation) # 문자 제거
stopword2 <- c(stopwords('en'),"and","but","not","설국열","들이",
"frien","때까","니가","하기","al","re","기다","fas","tim","tende",
"마르","jus","lov","dow","닳도","모르겠","좋았","gir","gam","소프라",
"eidorad","돼주","알았","아프","집으","벌릴테","악보따","아인슈타",
"fuc","이기","girlfrien","버티겠","바랬잖","nigh","poin","zer",
"베토","씌우","뜬눈우","ambitio","놓치지않","tim","eh","reaso",
"madeleine","studi","’","’m","nee") # 불용어 추가
hiphop <- tm_map(hiphop,removeWords,stopword2) #불용어 제거
hiphop <- TermDocumentMatrix(hiphop)
findFreqTerms(hiphop,10) # 빈도수가 10 이상인 경우
hiphop <- as.matrix(hiphop)
nrow(hiphop)
wordcount <- sort(rowSums(hiphop),decreasing=T)
head(wordcount,20)
palete <- brewer.pal(10,"Paired")
par(oma=rep(0,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(6,1),rot.per=0.25,min.freq=1,
colors=palete,random.order=F,random.color=T)
legend(0.3,0.85,"hiphop 가사 분석결과",cex=0.8,fill=NA,border=NA,bg="white",
text.col="red",text.font=2,box.col="blue")
top10 <- head(sort(wordcount,decreasing=T),10)
top10 <- as.data.frame(top10)
noun <- as.data.frame(rownames(top10))
top10 <- cbind.data.frame(noun,top10)
colnames(top10) <- c("noun","top10")
options(digits=2)
top10 <- top10 %>%
mutate(pct=top10/sum(top10)*100) %>%
mutate(ylabel=paste(sprintf("%s\n%4.1f",noun,pct),'%',sep=''))
top10 <- top10[c(2,7,4,9,8,5,1,3,6,10),]
top10 <- top10 %>%
mutate(ypos=cumsum(pct)-0.5*pct)
colnames(top10) <- c("noun","freq","pct","ylabel","ypos")
ggplot(top10,aes(x="",y=pct,fill=noun)) +
geom_bar(stat="identity", width=1) +
geom_text(aes(y=ypos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("") + ylab("") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
ggplot(top10,aes(x=noun,y=freq,fill=noun)) +
geom_bar()
top10
ggplot(top10,aes(x=noun,y=freq,fill=noun)) +
geom_bar(stat="identity")
top10 <- top10 %>%
mutate(freqpos=0.8*freq)
ggplot(top10,aes(x=noun,y=freq,fill=noun)) +
geom_bar(stat="identity") +
geom_text(aes(y=freqpos,label=ylabel),color="black") +
coord_polar(theta="y",start=0) +
xlab("명사") + ylab("빈도수") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
ggplot(top10,aes(x=noun,y=freq,fill=noun)) +
geom_bar(stat="identity") +
geom_text(aes(y=freqpos,label=ylabel),color="black") +
xlab("명사") + ylab("빈도수") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(color="brown",size=16,face="bold",hjust=0.5))
ggplot(top10,aes(x=reorder(noun,-freq),
y=freq,fill=noun)) +
geom_bar(stat="identity") +
geom_text(aes(y=freqpos,label=ylabel),
color="black") +
xlab("명사") + ylab("빈도수") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(
color="brown",size=16,
face="bold",hjust=0.5))
ggplot(top10,aes(x=reorder(noun,-freq),
y=freq,fill=noun)) +
geom_bar(stat="identity") +
geom_text(aes(y=freqpos,label=ylabel),
color="black") +
xlab("명사") + ylab("빈도수") +
ggtitle("hiphop 가사 분석결과") +
theme(plot.title=element_text(
color="brown",size=20,
face="bold.italic",hjust=0.5))
